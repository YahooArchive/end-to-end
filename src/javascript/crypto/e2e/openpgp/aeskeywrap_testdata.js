/**
 * @license
 * Copyright 2013 Google Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Test data for AES Key Wrap algorithm. The test vectors were
 *     downloaded from RFC 3394.
 * @author thaidn@google.com (Thai Duong)
 */

goog.provide('e2e.cipher.aesKeyWrapTestData');
goog.setTestOnly();


/**
 * 128-bit key-encrypting key.
 */
e2e.cipher.aesKeyWrapTestData.kek128 = {
  'key': [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F]
};


/**
 * 192-bit key-encrypting key.
 */
e2e.cipher.aesKeyWrapTestData.kek192 = {
  'key': [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17]
};


/**
 * 256-bit key-encrypting key.
 */
e2e.cipher.aesKeyWrapTestData.kek256 = {
  'key': [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F]
};


/**
 * 128-bit key data to be wrapped.
 */
e2e.cipher.aesKeyWrapTestData.keyData128 = [
  0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
  0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF];


/**
 * 192-bit key data to be wrapped.
 */
e2e.cipher.aesKeyWrapTestData.keyData192 = [
  0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
  0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF,
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07];


/**
 * 256-bit key data to be wrapped.
 */
e2e.cipher.aesKeyWrapTestData.keyData256 = [
  0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
  0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF,
  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F];


/**
 * Result of wrapping 128 bits key data with a 128-bit KEK.
 */
e2e.cipher.aesKeyWrapTestData.wrappedKeyData128128 = [
  0x1F, 0xA6, 0x8B, 0x0A, 0x81, 0x12, 0xB4, 0x47,
  0xAE, 0xF3, 0x4B, 0xD8, 0xFB, 0x5A, 0x7B, 0x82,
  0x9D, 0x3E, 0x86, 0x23, 0x71, 0xD2, 0xCF, 0xE5];


/**
 * Result of wrapping 128 bits key data with a 192-bit KEK.
 */
e2e.cipher.aesKeyWrapTestData.wrappedKeyData128192 = [
  0x96, 0x77, 0x8B, 0x25, 0xAE, 0x6C, 0xA4, 0x35,
  0xF9, 0x2B, 0x5B, 0x97, 0xC0, 0x50, 0xAE, 0xD2,
  0x46, 0x8A, 0xB8, 0xA1, 0x7A, 0xD8, 0x4E, 0x5D];


/**
 * Result of wrapping 128 bits key data with a 256-bit KEK.
 */
e2e.cipher.aesKeyWrapTestData.wrappedKeyData128256 = [
  0x64, 0xE8, 0xC3, 0xF9, 0xCE, 0x0F, 0x5B, 0xA2,
  0x63, 0xE9, 0x77, 0x79, 0x05, 0x81, 0x8A, 0x2A,
  0x93, 0xC8, 0x19, 0x1E, 0x7D, 0x6E, 0x8A, 0xE7];


/**
 * Result of wrapping 192 bits key data with a 192-bit KEK.
 */
e2e.cipher.aesKeyWrapTestData.wrappedKeyData192192 = [
  0x03, 0x1D, 0x33, 0x26, 0x4E, 0x15, 0xD3, 0x32,
  0x68, 0xF2, 0x4E, 0xC2, 0x60, 0x74, 0x3E, 0xDC,
  0xE1, 0xC6, 0xC7, 0xDD, 0xEE, 0x72, 0x5A, 0x93,
  0x6B, 0xA8, 0x14, 0x91, 0x5C, 0x67, 0x62, 0xD2];


/**
 * Result of wrapping 192 bits key data with a 256-bit KEK.
 */
e2e.cipher.aesKeyWrapTestData.wrappedKeyData192256 = [
  0xA8, 0xF9, 0xBC, 0x16, 0x12, 0xC6, 0x8B, 0x3F,
  0xF6, 0xE6, 0xF4, 0xFB, 0xE3, 0x0E, 0x71, 0xE4,
  0x76, 0x9C, 0x8B, 0x80, 0xA3, 0x2C, 0xB8, 0x95,
  0x8C, 0xD5, 0xD1, 0x7D, 0x6B, 0x25, 0x4D, 0xA1];


/**
 * Result of wrapping 256 bits key data with a 256-bit KEK.
 */
e2e.cipher.aesKeyWrapTestData.wrappedKeyData256256 = [
  0x28, 0xC9, 0xF4, 0x04, 0xC4, 0xB8, 0x10, 0xF4,
  0xCB, 0xCC, 0xB3, 0x5C, 0xFB, 0x87, 0xF8, 0x26,
  0x3F, 0x57, 0x86, 0xE2, 0xD8, 0x0E, 0xD3, 0x26,
  0xCB, 0xC7, 0xF0, 0xE7, 0x1A, 0x99, 0xF4, 0x3B,
  0xFB, 0x98, 0x8B, 0x9B, 0x7A, 0x02, 0xDD, 0x21];
